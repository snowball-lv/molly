require "rake/clean"

SRC = FileList["src/*.c", "src/*.asm"]

OBJ = SRC.map do |f|
	f.ext(".o").sub("src", "out")
end

directory "bin"
directory "out"

file "bin/kernel.bin" => "bin/kernel.exe" do
	Dir.chdir("bin") do
		sh "objcopy -O binary " \
			"-j .start " \
			"-j .text " \
			"-j .rdata " \
			"-j .data " \
			"-j .ramfs " \
			"-j .bss " \
			"kernel.exe kernel.bin"
	end
end

LIBC_INC 	= "../libc/inc"
LIBC_DIR 	= "../libc/bin"
LIBC 		= "molly"

LKFLAGS =
	"-Xlinker " \
	"-T kernel.ld " \
	"-o bin/kernel.exe " \
	"-nostdlib " \
	"-lgcc " \
	"-L#{LIBC_DIR} " \
	"-l#{LIBC} "

file "bin/kernel.exe" => OBJ do
	sh "gcc #{OBJ.join(" ")} #{LKFLAGS}"
end

CFLAGS =
	"-c " \
	"-std=gnu99 " \
	"-ffreestanding " \
	"-Wall " \
	"-Wextra " \
	"-Iinc " \
	"-I#{LIBC_INC} " \
	"-mno-ms-bitfields " \
	"-D _MOLLY_DEBUG_ "

rule ".o" => [
	proc { |tn| tn.sub("out", "src").ext(".c") } 
] do |t|
	sh "gcc #{CFLAGS} #{t.source} -o #{t.name}"
end

rule ".o" => [
	proc { |tn| tn.sub("out", "src").ext(".asm") } 
] do |t|
	sh "nasm -f win32 #{t.source} -o #{t.name}"
end
	
task :default => ["bin", "out", "bin/kernel.bin"]

CLEAN.include("bin")
CLEAN.include("out")













